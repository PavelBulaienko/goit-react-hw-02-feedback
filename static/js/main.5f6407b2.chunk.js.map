{"version":3,"sources":["components/Buttons.js","components/Stats.js","components/ExtraStats.js","components/Reviews.js","components/App.js","index.js"],"names":["Buttons","onGoodClick","onNeutralClick","onBadClick","className","type","onClick","Stat","good","neutral","bad","ExtraStats","countTotalFeedback","countPositiveFeedbackPercentage","total","procent","Reviews","state","prevState","setState","Math","floor","localStorage","setItem","JSON","stringify","this","parse","getItem","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mRAiBeA,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAgBC,EAAhC,EAAgCA,WAAhC,OACZ,qCACI,uDACA,wBAAQC,UAAU,eAAeC,KAAK,SAASC,QAASL,EAAxD,kBAGA,wBAAQG,UAAU,eAAeC,KAAK,SAASC,QAASJ,EAAxD,qBAGA,wBAAQE,UAAU,eAAeC,KAAK,SAASC,QAASH,EAAxD,qBCHOI,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACT,gCACI,4CACA,uCAAUF,KACV,0CAAaC,KACb,sCAASC,SCIFC,EATI,SAAC,GAAD,IACfC,EADe,EACfA,mBACAC,EAFe,EAEfA,gCAFe,OAIf,qCACI,wCAAWD,IAAqBE,SAChC,2CAAcD,IAAkCE,eCmEzCC,E,4MAnEXC,MAAQ,CAAET,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCT,YAAc,WACV,IAAMiB,EAAY,EAAKD,MACvB,EAAKE,SAAS,CAAEX,KAAMU,EAAUV,KAAO,K,EAE3CN,eAAiB,WACb,IAAMgB,EAAY,EAAKD,MACvB,EAAKE,SAAS,CAAEV,QAASS,EAAUT,QAAU,K,EAEjDN,WAAa,WACT,IAAMe,EAAY,EAAKD,MACvB,EAAKE,SAAS,CAAET,IAAKQ,EAAUR,IAAM,K,EAEzCE,mBAAqB,WACjB,MAAO,CACHE,MAAO,EAAKG,MAAMT,KAAO,EAAKS,MAAMR,QAAU,EAAKQ,MAAMP,M,EAGjEG,gCAAkC,WAC9B,IAAQI,EAAR,eAAQA,MACAT,EAAuBS,EAAvBT,KACFM,EAAQN,EADiBS,EAAjBR,QAAiBQ,EAARP,IAEvB,OAAc,IAAVI,EACO,CACHC,QAASK,KAAKC,MAAc,IAAPb,EAAcM,GAAS,KAGzC,CACHC,QAAS,e,wDAKrB,WAEIO,aAAaC,QAAQ,UAAWC,KAAKC,UAAUC,KAAKT,U,+BAExD,WAEIS,KAAKP,SAASK,KAAKG,MAAML,aAAaM,QAAQ,e,oBAGlD,WACI,OACI,qCACI,cAAC,EAAD,CACI3B,YAAayB,KAAKzB,YAClBC,eAAgBwB,KAAKxB,eACrBC,WAAYuB,KAAKvB,aAErB,cAAC,EAAD,CACIK,KAAMkB,KAAKT,MAAMT,KACjBC,QAASiB,KAAKT,MAAMR,QACpBC,IAAKgB,KAAKT,MAAMP,MAEpB,cAAC,EAAD,CACIE,mBAAoBc,KAAKd,mBACzBC,gCACIa,KAAKb,yC,GA5DPgB,aCMPC,MARf,WACI,OACI,qBAAK1B,UAAU,MAAf,SACI,cAAC,EAAD,OCFZ2B,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.5f6407b2.chunk.js","sourcesContent":["import '../style/Button.css'\r\n\r\nconst Buttons = ({ onGoodClick, onNeutralClick, onBadClick }) => (\r\n    <>\r\n        <h2>Please leave feedback</h2>\r\n        <button className=\"buttonReview\" type=\"button\" onClick={onGoodClick}>\r\n            Good\r\n        </button>\r\n        <button className=\"buttonReview\" type=\"button\" onClick={onNeutralClick}>\r\n            Neutral\r\n        </button>\r\n        <button className=\"buttonReview\" type=\"button\" onClick={onBadClick}>\r\n            Bad\r\n        </button>\r\n    </>\r\n)\r\n\r\nexport default Buttons\r\n","const Stat = ({ good, neutral, bad }) => (\r\n    <div>\r\n        <h2>Statistics</h2>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n    </div>\r\n)\r\nexport default Stat\r\n","const ExtraStats = ({\r\n    countTotalFeedback,\r\n    countPositiveFeedbackPercentage,\r\n}) => (\r\n    <>\r\n        <p>Total: {countTotalFeedback().total}</p>\r\n        <p>Positive: {countPositiveFeedbackPercentage().procent}</p>\r\n    </>\r\n)\r\nexport default ExtraStats\r\n","import { Component } from 'react'\r\nimport Buttons from './Buttons'\r\nimport Stat from './Stats'\r\nimport ExtraStats from './ExtraStats'\r\n\r\nclass Reviews extends Component {\r\n    state = { good: 0, neutral: 0, bad: 0 }\r\n\r\n    onGoodClick = () => {\r\n        const prevState = this.state\r\n        this.setState({ good: prevState.good + 1 })\r\n    }\r\n    onNeutralClick = () => {\r\n        const prevState = this.state\r\n        this.setState({ neutral: prevState.neutral + 1 })\r\n    }\r\n    onBadClick = () => {\r\n        const prevState = this.state\r\n        this.setState({ bad: prevState.bad + 1 })\r\n    }\r\n    countTotalFeedback = () => {\r\n        return {\r\n            total: this.state.good + this.state.neutral + this.state.bad,\r\n        }\r\n    }\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { state } = this\r\n        const { good, neutral, bad } = state\r\n        const total = good + neutral + bad\r\n        if (total !== 0) {\r\n            return {\r\n                procent: Math.floor((good * 100) / total) + '%',\r\n            }\r\n        } else {\r\n            return {\r\n                procent: 'no reviews',\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // если не нужно записывать данные в localStorage закоментируйте эту функцию\r\n        localStorage.setItem('options', JSON.stringify(this.state))\r\n    }\r\n    componentDidMount() {\r\n        // если не нужно записывать данные в localStorage закоментируйте эту функцию\r\n        this.setState(JSON.parse(localStorage.getItem('options')))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Buttons\r\n                    onGoodClick={this.onGoodClick}\r\n                    onNeutralClick={this.onNeutralClick}\r\n                    onBadClick={this.onBadClick}\r\n                />\r\n                <Stat\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                />\r\n                <ExtraStats\r\n                    countTotalFeedback={this.countTotalFeedback}\r\n                    countPositiveFeedbackPercentage={\r\n                        this.countPositiveFeedbackPercentage\r\n                    }\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Reviews\r\n","import '../style/App.css'\nimport Reviews from './Reviews'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Reviews />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App />,  document.getElementById('root'))\n"],"sourceRoot":""}